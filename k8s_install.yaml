#https://microk8s.io/docs/configuring-services
#https://zhuanlan.zhihu.com/p/359719736
- hosts: ubuntu
  tasks:
    # - name: install microk8s
    #   shell: |
    #     apt update
    #     apt upgrade
    #     snap install microk8s --classic
    #     usermod -a -G microk8s $USER
    #     microk8s.status --wait-ready
    #     # alias k='microk8s.kubectl'
    #     # sudo microk8s enable dns dashboard
    #     microk8s.enable dashboard dns istio registry storage helm3 cilium

    #     ### some manage command
    #     # microk8s.inspect 排查下安装部署结果
    #     # microk8s leave
    #     # microk8s kubectl drain <node> --ignore-daemonsets
    #     # microk8s remove-node <node> #3 if node is crash

    #     # microk8s add-node ## run will be the master of the cluster,if all have mircok8s
    #     # https://zhuanlan.zhihu.com/p/81648464
    - name: check single node
      shell: cat /var/snap/microk8s/current/var/kubernetes/backend/cluster.yaml|grep Address|wc -l
      register: NodeCount
    - name: check software exist
      shell: which microk8s || echo ""
      register: Software
    - name: remove node
      become: true
      shell: |
        rm -rf /var/snap/microk8s/2264
        snap remove microk8s --purge 
      when: NodeCount.stdout != "1"
      #  and Software.stdout != ""
      # ignore_errors: true # (failed to remove snap "microk8s" base directory: remove /var/snap/microk8s: directory not empty)
                          # exist dir 2264.
    - name: apt update
      become: true
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 3600 
    - name: snap install k8s
      become: true
      snap:
        name: microk8s
        classic: yes
        # channel: 1.21
        # cmd: |
    - name: set containerd
    #   lineinfile:
    #     path: /etc/selinux/config
    #     regexp: '^sandbox_image ='
    #     line: sandbox_image = "registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1"
      become: true
      shell: |
        sudo usermod -a -G microk8s {{ansible_ssh_user}}
        sudo chown -f -R {{ansible_ssh_user}} ~/.kube
        echo $?
        # sed -i "s#k8s.gcr.io#registry.cn-hangzhou.aliyuncs.com/google_containers#g"  /var/snap/microk8s/current/args/containerd-template.toml
        # sed -i "s#https://registry-1.docker.io#https://registry.cn-hangzhou.aliyuncs.com#g"  /var/snap/microk8s/current/args/containerd-template.toml
        # systemctl restart snap.microk8s.daemon-containerd.service
        # microk8s.enable dns storage registry dashboard helm3 cilium #metallb 
    # - name: proxy https
    #   lineinfile:
    #     path: /var/snap/microk8s/current/args/containerd-env
    #     regexp: 'HTTPS_PROXY='
    #     line: 'HTTPS_PROXY=http://127.0.0.1:7890'
    - name: alias file
      synchronize:
        src: templates/.kubectl_aliases
        dest: /home/{{ansible_ssh_user}}/.kubectl_aliases
    # ansible-playbook -i test.hosts k8s_install.yaml --start-at-task 'alias file'
    - name: alias set
      blockinfile:
        marker: "# {mark} K8S ALIAS SET"
        path: /home/{{ansible_ssh_user}}/.zshrc
        block: |
          source /home/{{ansible_ssh_user}}/.kubectl_aliases
          alias 'm=microk8s'
          alias 'kubectl=microk8s kubectl'
          alias 'cstatus=cat /var/snap/microk8s/current/var/kubernetes/backend/cluster.yaml'
          alias 'jn=journalctl -n 1000'
          source <(kubectl completion zsh)
          export SNAP="/snap/microk8s/current"
          export SNAP_DATA="/var/snap/microk8s/current"
          
          if command -v microk8s>/dev/null; then
              # ${KUBE_PS1_BINARY} config current-context ## can't handle
              KUBE_PS1_BINARY=microk8s.kubectl
              if [ ! -f $HOME/.kube/config ]; then
                  microk8s config>$HOME/.kube/config
              elif [ -z "`cat $HOME/.kube/config|grep microk8s`" ]; then
                  echo "There is no microk8s config"
                  echo "please add info of \`microk8s config\`"
              fi
          fi